#!/usr/bin/perl -w

use utf8;
use strict;
use EOSN::Report;

binmode(STDOUT, ":utf8");

# --------------------------------------------------------------------------
# Main

my %map;
$map{p2p} = 'p2p-peer-address';
$map{bnet} = 'bnet-connect';

my $data = get_report_options ();
my $chain = chain ();
my $properties = chain_properties ($chain);
my %kinds;

foreach my $entry (@{$$data{producers}}) {
	foreach my $kind (sort keys %{$$entry{output}{nodes}}) {
		$kinds{$kind} = 1;
	}
}

foreach my $lang (languages ()) {
	foreach my $content_type (content_types ()) {
		my @report;
		foreach my $kind (sort keys %kinds) {
			next if (! $map{$kind});
			my @section;

			foreach my $entry (@{$$data{producers}}) {
				my $producer = $$entry{regproducer}{owner};
				my $important_bp = is_important_bp ($entry);

				foreach my $node (@{$$entry{output}{nodes}{$kind}}) {
					my $location_name = $$node{location}{name} || "Unknown";
					my $location_country = $$node{location}{country} || "??";
					push (@section, {
						sprintf => "# %s: %s, %s",
						data => [$producer, $location_country, $location_name]
					});
					push (@section, {
						sprintf => "%s = %s",
						data => [$map{$kind}, $$node{address}]
					});
					push (@section, {
						sprintf => "",
						data => []
					});
				}
			}

			push (@report, {name => $kind, rows => \@section, name_prefix => '# ', section_divider => 2});
		}

		generate_report (chain => $chain, lang => $lang, content_type => $content_type, data => $data, report => \@report, columns => 0, outfile => "reports/config", text => 1, json => 1, html => 1);
	}
}
