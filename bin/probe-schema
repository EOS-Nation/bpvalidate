#!/usr/bin/perl -w

# --------------------------------------------------------------------------
# Required modules

use utf8;
use strict;
use warnings;
use EOSN::SQL qw(do_connect_sqlite);

# ---------------------------------------------------------------------------
# Main

my %columns;
$columns{url}{md5} = "varchar(32)";
$columns{url}{checked_at} = "int(11)";
$columns{url}{elapsed_time} = "float(10,2)";
$columns{url}{request_method} = "varchar(10)";
$columns{url}{request_url} = "text";
$columns{url}{request_headers} = "mediumtext";
$columns{url}{request_content} = "mediumtext";
$columns{url}{response_code} = "smallint unsigned";
$columns{url}{response_message} = "varchar(255)";
$columns{url}{response_headers} = "mediumtext";
$columns{url}{response_content} = "longblob";

$columns{whois}{checked_at} = "int(11)";
$columns{whois}{ip_address} = "varchar(39)";
$columns{whois}{response_content} = "longblob";

$columns{tls}{md5} = "varchar(32)";
$columns{tls}{checked_at} = "int(11)";
$columns{tls}{url} = "varchar(100)";
$columns{tls}{ip_address} = "varchar(39)";
$columns{tls}{port} = "varchar(6)";
$columns{tls}{response_content} = "longblob";

my $dbh = do_connect_sqlite('bpvalidate');

foreach my $table (sort keys %columns) {
	$dbh->do ("create table if not exists $table (id integer primary key autoincrement)");

	my $columns_exist = $dbh->selectall_hashref("PRAGMA table_info($table)", 'name');

	foreach my $column (sort keys %{$columns{$table}}) {
		next if (exists $$columns_exist{$column});
		my $spec = $columns{$table}{$column};
		$dbh->do ("alter table $table add column $column $spec");
	}
}

$dbh->do ("create unique index if not exists i_md5 on url (md5)");
$dbh->do ("create unique index if not exists i_ip_address on whois (ip_address)");
$dbh->do ("create unique index if not exists i_md5 on tls (md5)");
