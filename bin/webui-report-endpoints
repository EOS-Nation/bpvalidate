#!/usr/bin/perl -w

use utf8;
use strict;
use EOSN::Validate::Report;

binmode(STDOUT, ":utf8");

# --------------------------------------------------------------------------
# Main

my $report = EOSN::Validate::Report->new;
$report->get_report_options;

my $webpage = $report->webpage;
my $data = $report->data;
my $chain = $report->chain;
my $properties = $webpage->chain_properties ($chain);
my %kinds;

foreach my $entry (@{$$data{producers}}) {
	foreach my $kind (sort keys %{$$entry{output}{nodes}}) {
		$kinds{$kind} = 1;
	}
}

foreach my $lang ($webpage->langs) {
	foreach my $content_type ($webpage->content_types) {
		my @report;
		foreach my $kind (sort keys %kinds) {
			my @section;

			foreach my $entry (@{$$data{producers}}) {
				my $producer = $$entry{regproducer}{owner};
				my $important_bp = $report->is_important_bp ($entry);

				foreach my $node (@{$$entry{output}{nodes}{$kind}}) {
					my $orgs = $report->whois_org ($node);
					my $countries = $report->whois_country ($node);
					my $flags = $report->whois_flag ($node);
					my $link = $$node{address};
					if ($$node{address} =~ m#^http://|^https://#) {
						$link = "<a href=\"$$node{address}\">$$node{address}</a>";
					}
					push (@section, {
						producer => $producer,
						sprintf => "%50s, %5s, %s",
						data => [$$node{address}, $countries, $orgs],
						html_data => [$link, $flags, undef]
					});
				}
			}

			push (@report, {name => $kind, rows => \@section});
		}

		$report->generate_report (lang => $lang, content_type => $content_type, report => \@report, columns => 1, outfile => "reports/endpoints", text => 1, json => 1, html => 1);
	}
}
