#!/usr/bin/perl -w

use utf8;
use strict;
use EOSN::Validate::Report;

binmode(STDOUT, ":utf8");

# --------------------------------------------------------------------------
# Main

my $report = EOSN::Validate::Report->new;
$report->get_report_options;

my $config = $report->config;
my $data = $report->data;
my $chain = $report->chain;
my $properties = $config->chain_properties ($chain);
my %kinds;

foreach my $entry (@{$$data{producers}}) {
	my $key = $$entry{info}{country_alpha2} || 'zzunknown';
	$kinds{$key} = 1;
}

foreach my $lang ($config->langs) {
	foreach my $content_type ($config->content_types) {
		my @report;
		foreach my $kind (sort keys %kinds) {
			my @section;
			my $name = $kind;

			foreach my $entry (@{$$data{producers}}) {
				my $producer = $$entry{regproducer}{owner};
				my $important_bp = $report->is_important_bp ($entry);
				my $country_name = $$entry{info}{country_name};
				my $key = $$entry{info}{country_alpha2} || 'zzunknown';
				next if ($key ne $kind);
				$name = $$entry{info}{country_name} if ($$entry{info}{country_name});

				if ($key ne 'zzunknown' || $important_bp) {
					push (@section, {
						producer => $producer,
						sprintf => "",
						data => []
					});
				}
			}
			if ($kind eq 'zzunknown') {
				push (@report, {name => $name, rows => \@section});
			} else {
				push (@report, {name => $name, title => "$name &nbsp; " . $report->flag_html ($kind), rows => \@section});
			}
		}

		$report->generate_report (lang => $lang, content_type => $content_type, report => \@report, columns => 1, outfile => "reports/country", text => 1, json => 1, html => 1);
	}
}
